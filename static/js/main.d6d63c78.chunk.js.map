{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["allStates","allCities","cities","states","selectedState","selectedCity","axios","response","console","CountrySelector","props","name","containerClass","styleContainer","onChange","optionClass","value","placeholder","countries","CountriesJson","country","label","className","styles","src","alt","selectedOption","styleProps","style","classNamePrefix","key","isClearable","isSearchable","option","options","filterOption","input","candidate","defaultValue","StateSelector","countryPlaceholder","item","state","CitySelector","statePlaceholder","city","App","useState","setCountry","setState","setCity","display","justifyContent","alignItems","border","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6d63c78.chunk.js","sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react'\nimport Select from 'react-select'\nimport axios from 'axios'\nimport styles from './styles.module.css'\nimport CountriesJson from './DataJson/Countries.json'\n\ntype OptionProps = {\n  id: number\n  name: string\n  iso3: string\n  iso2: string\n  numeric_code: string | number\n  phone_code: number | string\n  capital: string\n  currency: string\n  currency_name: string\n  currency_symbol: string\n  tld: string\n  native: string\n  region: string\n  subregion: string\n  timezones: string\n  latitude: string\n  longitude: string\n  emoji: string\n  emojiU: string\n  label: string | any\n  value: string\n}\n\ntype StateOptions = {\n  id: number\n  name: string\n  country_id: number\n  country_code: string\n  country_name: string\n  state_code: string\n  type: string\n  latitude: string | number\n  longitude: string | number\n  label?: string\n  value?: string\n}\n\ntype CityOptions = {\n  id: number\n  name: string\n  state_id: number\n  state_code: string\n  state_name: string\n  country_id: number\n  country_code: string\n  country_name: string\n  latitude: string | number\n  longitude: string | number\n  wikiDataId: string\n  label: string\n  value: string\n}\n\ninterface CountrySelectorProps {\n  name?: string\n  containerClass?: string\n  styleContainer?: React.CSSProperties\n  onChange?: (country: OptionProps) => any\n  optionClass?: string\n  value?: OptionProps\n  placeholder?: string\n}\n\ninterface StateSelectorProps {\n  name?: string\n  containerClass?: string\n  styleContainer?: React.CSSProperties\n  onChange?: (state: StateOptions) => any\n  value?: OptionProps\n  placeholder?: string\n  countryPlaceholder?: string\n  country?: OptionProps\n}\n\ninterface CitySelectorProps {\n  name?: string\n  containerClass?: string\n  styleContainer?: React.CSSProperties\n  onChange?: (city: CityOptions) => any\n  value?: OptionProps\n  placeholder?: string\n  statePlaceholder?: string\n  state?: StateOptions\n}\n\nlet allStates: any = []\nlet allCities: any = []\nlet cities: any = []\nlet states: any = []\nlet selectedState: StateOptions | any = ''\nlet selectedCity: CityOptions | any = ''\n\naxios\n  .get(\n    'https://raw.githubusercontent.com/mbaye19/country-data/main/States.json'\n  )\n  .then((response) => {\n    allStates = response?.data\n  })\n  .catch((err) => {\n    console.log('err', err)\n    // loading = false\n  })\n\naxios\n  .get(\n    'https://raw.githubusercontent.com/mbaye19/country-data/main/Cities.json'\n  )\n  .then((response) => {\n    allCities = response?.data\n  })\n  .catch((err) => {\n    console.log('err', err)\n  })\n\nexport const CountrySelector = (props: CountrySelectorProps) => {\n  const {\n    name,\n    containerClass,\n    styleContainer,\n    onChange,\n    optionClass,\n    value,\n    placeholder\n  } = props\n  const countries = CountriesJson.map((country) => {\n    return {\n      value: country.iso2,\n      label: (\n        <div className={`${styles.label}${optionClass}`}>\n          <img\n            src={`http://purecatamphetamine.github.io/country-flag-icons/3x2/${country.iso2}.svg`}\n            alt='flag'\n            className={styles.flag}\n          />\n          <span className={styles.countryName}>{country.name}</span>\n        </div>\n      ),\n      ...country\n    }\n  })\n\n  let selectedOption: OptionProps | any = ''\n\n  const filterOptions = (\n    candidate: { label: string; value: string; data: any },\n    input: string\n  ) => {\n    if (input) {\n      return candidate?.data?.name\n        ?.toLowerCase()\n        ?.includes(input?.toLowerCase())\n    }\n    return true\n  }\n\n  const handleSelectChange = (option: OptionProps) => {\n    selectedState = null\n    selectedCity = null\n    selectedOption = option\n    if (onChange && onChange !== undefined) {\n      onChange(option)\n    }\n  }\n\n  let styleProps: React.CSSProperties | any = null\n\n  if (styleContainer) {\n    styleProps = {\n      ...styleProps,\n      styleContainer\n    }\n  }\n\n  return (\n    <div\n      className={`${styles.selectContainer}${\n        containerClass && containerClass !== undefined ? containerClass : ''\n      }`}\n      style={styleProps}\n    >\n      {' '}\n      <Select\n        className={styles.selectClass}\n        classNamePrefix='select'\n        key='country'\n        isClearable\n        isSearchable\n        name={`${name && name !== undefined ? name : 'country'}`}\n        onChange={handleSelectChange}\n        options={countries}\n        filterOption={filterOptions}\n        defaultValue={value && value !== undefined ? value : selectedOption}\n        placeholder={`${\n          placeholder && placeholder !== undefined\n            ? placeholder\n            : 'Select country'\n        }`}\n      />\n    </div>\n  )\n}\n\nexport const StateSelector = (props: StateSelectorProps) => {\n  const {\n    name,\n    containerClass,\n    styleContainer,\n    onChange,\n    value,\n    placeholder,\n    countryPlaceholder,\n    country\n  } = props\n\n  if (country?.value) {\n    states = allStates\n      ?.filter((item: StateOptions) => item?.country_code === country?.value)\n      ?.map((state: StateOptions) => {\n        return {\n          value: state?.state_code,\n          label: state?.name,\n          ...state\n        }\n      })\n  } else {\n    states = []\n  }\n\n  const handleSelectChange = (option: StateOptions) => {\n    selectedCity = null\n    selectedState = option\n    if (onChange && onChange !== undefined) {\n      onChange(option)\n    }\n  }\n\n  let styleProps: React.CSSProperties | any = null\n\n  if (styleContainer) {\n    styleProps = {\n      ...styleProps,\n      styleContainer\n    }\n  }\n\n  if (value && value !== undefined && selectedState !== null) {\n    selectedState = value\n  }\n\n  return (\n    <div\n      className={`${styles.selectContainer}${\n        containerClass && containerClass !== undefined ? containerClass : ''\n      }`}\n      style={styleProps}\n    >\n      {' '}\n      <Select\n        className={styles.selectClass}\n        classNamePrefix='select'\n        isClearable\n        isSearchable\n        key='state'\n        name={`${name && name !== undefined ? name : 'state'}`}\n        onChange={handleSelectChange}\n        options={states}\n        value={selectedState}\n        placeholder={`${\n          country?.value\n            ? placeholder && placeholder !== undefined\n              ? placeholder\n              : 'Select state'\n            : countryPlaceholder && countryPlaceholder !== undefined\n            ? countryPlaceholder\n            : 'Select country'\n        }`}\n      />\n    </div>\n  )\n}\n\nexport const CitySelector = (props: CitySelectorProps) => {\n  const {\n    name,\n    containerClass,\n    styleContainer,\n    onChange,\n    value,\n    placeholder,\n    statePlaceholder,\n    state\n  } = props\n\n  if (state?.value) {\n    cities = allCities\n      ?.filter(\n        (item: CityOptions) =>\n          item?.country_code === state?.country_code &&\n          item?.state_code === state?.state_code\n      )\n      ?.map((city: any) => {\n        return {\n          value: city?.name,\n          label: city?.name,\n          ...city\n        }\n      })\n  } else {\n    cities = []\n  }\n  const handleSelectChange = (option: CityOptions) => {\n    selectedCity = option\n    if (onChange && onChange !== undefined) {\n      onChange(option)\n    }\n  }\n\n  let styleProps: React.CSSProperties | any = null\n\n  if (styleContainer) {\n    styleProps = {\n      ...styleProps,\n      styleContainer\n    }\n  }\n\n  if (value && value !== undefined && selectedCity !== null) {\n    selectedCity = value\n  }\n\n  return (\n    <div\n      className={`${styles.selectContainer}${\n        containerClass && containerClass !== undefined ? containerClass : ''\n      }`}\n      style={styleProps}\n    >\n      {' '}\n      <Select\n        className={styles.selectClass}\n        classNamePrefix='select'\n        isClearable\n        key='city'\n        isSearchable\n        name={`${name && name !== undefined ? name : 'city'}`}\n        onChange={handleSelectChange}\n        options={cities}\n        value={selectedCity || ''}\n        placeholder={`${\n          state?.value\n            ? placeholder && placeholder !== undefined\n              ? placeholder\n              : 'Select city'\n            : statePlaceholder && statePlaceholder !== undefined\n            ? statePlaceholder\n            : 'Select state'\n        }`}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  CountrySelector,\n  StateSelector,\n  CitySelector\n} from 'volkeno-react-country-state-city'\nimport 'volkeno-react-country-state-city/dist/index.css'\n\nconst App = () => {\n  const [country, setCountry] = useState<any>('')\n  const [state, setState] = useState<any>('')\n  const [city, setCity] = useState<any>('')\n\n  const handleCountrySelect = (option: any) => {\n    setCountry(option)\n  }\n\n  const handleStateSelect = (option: any) => {\n    setState(option)\n  }\n\n  const handleCitySelect = (option: any) => {\n    setCity(option)\n  }\n  return (\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', border: '2px solid grey', margin: '5rem'}}>\n      <CountrySelector\n        onChange={handleCountrySelect}\n        name='country'\n        placeholder='Select a country'\n        value={country}\n      />\n      <StateSelector\n        country={country}\n        name='state'\n        value={state}\n        countryPlaceholder='Select a country first'\n        onChange={handleStateSelect}\n      />\n      <CitySelector\n        state={state}\n        name='city'\n        value={city}\n        statePlaceholder='Select a state first'\n        onChange={handleCitySelect}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}